# Supabase Configuration
VITE_SUPABASE_URL=https://rsvjnndhbyyxktbczlnk.supabase.co
VITE_SUPABASE_SERVICE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJzdmpubmRoYnl5eGt0YmN6bG5rIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0MzQwOTc3OSwiZXhwIjoyMDU4OTg1Nzc5fQ.cnmSutfsHLOWHqMpgIOv5fCHBI0jZG4AN5YJSeHDsEA

# Database Configuration
DATABASE_URL="postgresql://postgres.rsvjnndhbyyxktbczlnk:P+-@@6CUDUJSUpy@aws-0-eu-west-2.pooler.supabase.com:6543/postgres"
VITE_DATABASE_URL="postgresql://postgres:postgres@db:5432/postgres"

# MapBox Configuration
VITE_MAPBOX_TOKEN=pk.eyJ1IjoidGVjaC1lZHUtbGFiIiwiYSI6ImNtN3cxaTFzNzAwdWwyanMxeHJkb3RrZjAifQ.h0g6a56viW7evC7P0c5mwQ
VITE_MAPBOX_STYLE_URL=mapbox://styles/mapbox/streets-v12
VITE_MAPBOX_INITIAL_CENTER=-23.5489,-46.6388
VITE_MAPBOX_INITIAL_ZOOM=12
SUPABASE_ACCESS_TOKEN=sbp_d3b5d49b51951b112fa5061d0443a82f8651474b


"C:\Tools\Supabase\README.md"
"C:\Tools\Supabase\supabase.exe"
"C:\Tools\Supabase\LICENSE"


aluno de teste
franklinmaceloferreiradelima@gmail.com
senha
@#$Franklin123

import React, { useState, useRef, useEffect } from 'react';
import { MapPin, User, Phone, Mail, Edit, Share, Trash2, Plus, LogOut, Copy, Check, X } from 'lucide-react';

const StudentDashboard = () => {
  const mapContainer = useRef(null);
  const [isMapLoaded, setIsMapLoaded] = useState(false);
  const [locationStatus, setLocationStatus] = useState('Aguardando localização...');
  const [location, setLocation] = useState({ latitude: -23.5489, longitude: -46.6388 });
  const [showAddGuardian, setShowAddGuardian] = useState(false);
  const [guardianForm, setGuardianForm] = useState({ name: '', email: '', phone: '' });
  const [editIndex, setEditIndex] = useState(null);
  const [copiedLocation, setCopiedLocation] = useState(false);
  const [activeTab, setActiveTab] = useState('location');
  
  // Mock user data
  const user = {
    full_name: "Ana Silva",
    email: "ana.silva@email.com",
    phone: "+55 11 98765-4321",
  };

  // Mock guardians data
  const [guardians, setGuardians] = useState([
    { name: 'Carlos Silva', email: 'carlos.silva@email.com', phone: '+55 11 98765-1234', status: 'Ativo' },
    { name: 'Maria Silva', email: 'maria.silva@email.com', phone: '+55 11 98765-5678', status: 'Ativo' }
  ]);

  // Handle form input changes
  const handleFormChange = (e) => {
    const { name, value } = e.target;
    setGuardianForm(prev => ({ ...prev, [name]: value }));
  };

  // Add or update guardian
  const handleSubmitGuardian = (e) => {
    e.preventDefault();
    
    if (editIndex !== null) {
      // Update existing guardian
      const updatedGuardians = [...guardians];
      updatedGuardians[editIndex] = { ...guardianForm, status: 'Ativo' };
      setGuardians(updatedGuardians);
      setEditIndex(null);
    } else {
      // Add new guardian
      setGuardians([...guardians, { ...guardianForm, status: 'Ativo' }]);
    }
    
    setGuardianForm({ name: '', email: '', phone: '' });
    setShowAddGuardian(false);
  };

  // Start editing a guardian
  const handleEditGuardian = (index) => {
    setGuardianForm(guardians[index]);
    setEditIndex(index);
    setShowAddGuardian(true);
  };

  // Delete a guardian
  const handleDeleteGuardian = (index) => {
    const updatedGuardians = guardians.filter((_, i) => i !== index);
    setGuardians(updatedGuardians);
  };

  // Copy location link
  const handleCopyLocation = () => {
    const locationUrl = `https://maps.google.com/?q=${location.latitude},${location.longitude}`;
    navigator.clipboard.writeText(locationUrl).then(() => {
      setCopiedLocation(true);
      setTimeout(() => setCopiedLocation(false), 2000);
    });
  };

  // Share location with a guardian
  const handleShareLocation = (index) => {
    // In a real app, this would send the location via email/SMS
    alert(`Localização compartilhada com ${guardians[index].name}`);
  };

  // Cancel form
  const handleCancelForm = () => {
    setGuardianForm({ name: '', email: '', phone: '' });
    setShowAddGuardian(false);
    setEditIndex(null);
  };

  // Simulated map initialization - would be replaced with actual Mapbox
  useEffect(() => {
    if (mapContainer.current) {
      // Simulate map loading with a small delay to show loading state
      setLocationStatus('Obtendo sua localização...');
      
      const loadTimer = setTimeout(() => {
        setIsMapLoaded(true);
        setLocationStatus('Localização atual');
        
        // This would be replaced with actual map initialization
        const mapElement = mapContainer.current;
        mapElement.style.background = "linear-gradient(135deg, #d4e0ec 0%, #b5d4e8 100%)";
        
        // Create pin element
        const pin = document.createElement('div');
        pin.className = "absolute flex items-center justify-center";
        pin.style.top = "50%";
        pin.style.left = "50%";
        pin.style.transform = "translate(-50%, -50%)";
        pin.innerHTML = `
          <div class="h-8 w-8 rounded-full bg-blue-500 flex items-center justify-center animate-pulse">
            <div class="h-4 w-4 rounded-full bg-white"></div>
          </div>
          <div class="absolute top-0 left-0 w-full h-full rounded-full bg-blue-500 opacity-20 animate-ping"></div>
        `;
        
        mapElement.appendChild(pin);
      }, 1000);
      
      return () => {
        clearTimeout(loadTimer);
      };
    }
  }, []);
  
  // Format date for header
  const formatDate = () => {
    const options = { weekday: 'long', day: 'numeric', month: 'long', year: 'numeric' };
    return new Intl.DateTimeFormat('pt-BR', options).format(new Date());
  };
  
  return (
    <div className="flex flex-col min-h-screen bg-slate-50">
      {/* Header */}
      <header className="bg-white shadow-sm py-3 px-4 sticky top-0 z-10">
        <div className="max-w-7xl mx-auto flex justify-between items-center">
          <div className="flex items-center">
            <h1 className="text-xl font-bold text-blue-600">LocaAluno</h1>
            <span className="ml-4 text-sm text-gray-500 hidden md:block">{formatDate()}</span>
          </div>
          <div className="flex items-center space-x-3">
            <div className="h-9 w-9 rounded-full bg-blue-100 flex items-center justify-center">
              <User size={18} className="text-blue-600" />
            </div>
            <span className="font-medium hidden md:block">{user.full_name}</span>
          </div>
        </div>
      </header>
      
      {/* Main Content */}
      <main className="flex-1 max-w-7xl mx-auto w-full p-4 md:p-6">
        {/* Tabs */}
        <div className="flex mb-6 border-b">
          <button 
            className={`px-4 py-2 font-medium ${activeTab === 'location' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-600'}`}
            onClick={() => setActiveTab('location')}
          >
            Minha Localização
          </button>
          <button 
            className={`px-4 py-2 font-medium ${activeTab === 'guardians' ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-600'}`}
            onClick={() => setActiveTab('guardians')}
          >
            Responsáveis
          </button>
        </div>
        
        {activeTab === 'location' ? (
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
            {/* User Info */}
            <div className="lg:col-span-1">
              <div className="bg-white rounded-xl shadow-sm overflow-hidden">
                <div className="bg-gradient-to-r from-blue-600 to-blue-700 p-5">
                  <div className="flex justify-center">
                    <div className="h-20 w-20 rounded-full bg-white flex items-center justify-center border-4 border-blue-200">
                      <User size={36} className="text-blue-600" />
                    </div>
                  </div>
                  <div className="mt-3 text-center text-white">
                    <h2 className="text-lg font-bold">{user.full_name}</h2>
                  </div>
                </div>
                
                <div className="p-5">
                  <h3 className="font-medium text-gray-800 mb-3">Informações de Contato</h3>
                  <div className="space-y-3">
                    <div className="flex items-start">
                      <Mail className="h-5 w-5 text-gray-500 mr-3 mt-0.5" />
                      <div>
                        <p className="text-xs text-gray-500">Email</p>
                        <p className="text-sm">{user.email}</p>
                      </div>
                    </div>
                    <div className="flex items-start">
                      <Phone className="h-5 w-5 text-gray-500 mr-3 mt-0.5" />
                      <div>
                        <p className="text-xs text-gray-500">Telefone</p>
                        <p className="text-sm">{user.phone}</p>
                      </div>
                    </div>
                  </div>
                  
                  <div className="mt-6 space-y-2">
                    <button className="w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg flex items-center justify-center transition duration-200">
                      <Edit size={16} className="mr-2" />
                      Editar Perfil
                    </button>
                    <button className="w-full px-4 py-2 border border-red-200 bg-white hover:bg-red-50 text-red-600 rounded-lg flex items-center justify-center transition duration-200">
                      <LogOut size={16} className="mr-2" />
                      Sair
                    </button>
                  </div>
                </div>
              </div>
            </div>
            
            {/* Map Section */}
            <div className="lg:col-span-2">
              <div className="bg-white rounded-xl shadow-sm overflow-hidden">
                <div className="p-4 border-b flex justify-between items-center">
                  <div>
                    <h3 className="font-semibold text-gray-800">Sua Localização</h3>
                    <p className="text-sm text-gray-500">{locationStatus}</p>
                  </div>
                  <button 
                    onClick={handleCopyLocation}
                    className={`flex items-center text-sm font-medium px-3 py-1 rounded-lg transition-colors ${
                      copiedLocation 
                        ? 'bg-green-100 text-green-700' 
                        : 'bg-blue-50 text-blue-600 hover:bg-blue-100'
                    }`}
                  >
                    {copiedLocation ? (
                      <>
                        <Check size={16} className="mr-1" />
                        Copiado!
                      </>
                    ) : (
                      <>
                        <Copy size={16} className="mr-1" />
                        Copiar Link
                      </>
                    )}
                  </button>
                </div>
                <div className="relative">
                  {!isMapLoaded && (
                    <div className="absolute inset-0 flex items-center justify-center bg-gray-50">
                      <div className="h-8 w-8 border-4 border-t-blue-500 border-blue-200 rounded-full animate-spin"></div>
                    </div>
                  )}
                  <div 
                    ref={mapContainer} 
                    className="h-72 bg-gray-100 relative"
                  />
                </div>
                <div className="p-4 bg-blue-50 flex flex-wrap items-center justify-between gap-2">
                  <div className="flex items-center">
                    <MapPin className="h-5 w-5 text-blue-600 mr-2 flex-shrink-0" />
                    <p className="text-blue-700 text-sm">São Paulo, SP - Brasil</p>
                  </div>
                  <div className="flex gap-2">
                    <button className="text-xs bg-green-600 text-white py-1 px-3 rounded-full hover:bg-green-700 transition-colors">
                      Atualizar
                    </button>
                    <button 
                      onClick={() => setActiveTab('guardians')}
                      className="text-xs bg-blue-600 text-white py-1 px-3 rounded-full hover:bg-blue-700 transition-colors flex items-center"
                    >
                      <Share size={12} className="mr-1" />
                      Compartilhar
                    </button>
                  </div>
                </div>
              </div>

              {/* Recent shares */}
              <div className="bg-white rounded-xl shadow-sm overflow-hidden mt-6">
                <div className="p-4 border-b">
                  <h3 className="font-semibold text-gray-800">Compartilhamentos Recentes</h3>
                </div>
                <div className="divide-y">
                  {guardians.length > 0 ? guardians.slice(0, 3).map((guardian, index) => (
                    <div key={index} className="p-4 flex items-center justify-between">
                      <div className="flex items-center">
                        <div className="h-10 w-10 rounded-full bg-blue-100 flex items-center justify-center mr-3">
                          <User size={18} className="text-blue-600" />
                        </div>
                        <div>
                          <p className="font-medium">{guardian.name}</p>
                          <p className="text-xs text-gray-500">Última atualização: há 10 minutos</p>
                        </div>
                      </div>
                      <button 
                        onClick={() => handleShareLocation(index)}
                        className="text-xs bg-blue-100 text-blue-600 py-1 px-3 rounded-full hover:bg-blue-200 transition-colors"
                      >
                        Enviar Novamente
                      </button>
                    </div>
                  )) : (
                    <div className="p-8 text-center text-gray-500">
                      <MapPin size={24} className="mx-auto mb-2 text-gray-400" />
                      <p>Nenhum compartilhamento recente</p>
                    </div>
                  )}
                </div>
              </div>
            </div>
          </div>
        ) : (
          <div className="bg-white rounded-xl shadow-sm overflow-hidden">
            <div className="p-4 border-b flex justify-between items-center">
              <h3 className="font-semibold text-gray-800">Meus Responsáveis</h3>
              {!showAddGuardian && (
                <button 
                  onClick={() => setShowAddGuardian(true)}
                  className="flex items-center text-sm font-medium px-3 py-1 bg-blue-50 text-blue-600 hover:bg-blue-100 rounded-lg transition-colors"
                >
                  <Plus size={16} className="mr-1" />
                  Adicionar
                </button>
              )}
            </div>
            
            {showAddGuardian ? (
              <div className="p-6">
                <h4 className="font-medium text-lg mb-4">
                  {editIndex !== null ? 'Editar Responsável' : 'Adicionar Novo Responsável'}
                </h4>
                <form onSubmit={handleSubmitGuardian}>
                  <div className="space-y-4">
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-1">Nome</label>
                      <input
                        type="text"
                        name="name"
                        value={guardianForm.name}
                        onChange={handleFormChange}
                        className="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                        required
                      />
                    </div>
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-1">Email</label>
                      <input
                        type="email"
                        name="email"
                        value={guardianForm.email}
                        onChange={handleFormChange}
                        className="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                        required
                      />
                    </div>
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-1">Telefone</label>
                      <input
                        type="tel"
                        name="phone"
                        value={guardianForm.phone}
                        onChange={handleFormChange}
                        className="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                        required
                      />
                    </div>
                    <div className="flex justify-end space-x-3 pt-2">
                      <button
                        type="button"
                        onClick={handleCancelForm}
                        className="px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                      >
                        Cancelar
                      </button>
                      <button
                        type="submit"
                        className="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                      >
                        {editIndex !== null ? 'Atualizar' : 'Adicionar'}
                      </button>
                    </div>
                  </div>
                </form>
              </div>
            ) : (
              <div className="divide-y">
                {guardians.length > 0 ? (
                  guardians.map((guardian, index) => (
                    <div key={index} className="p-4 flex flex-wrap md:items-center justify-between gap-3">
                      <div className="flex items-center">
                        <div className="h-10 w-10 rounded-full bg-blue-100 flex items-center justify-center mr-3 flex-shrink-0">
                          <User size={18} className="text-blue-600" />
                        </div>
                        <div>
                          <p className="font-medium">{guardian.name}</p>
                          <div className="flex flex-wrap gap-x-4 text-xs text-gray-500">
                            <span>{guardian.email}</span>
                            <span>{guardian.phone}</span>
                          </div>
                        </div>
                      </div>
                      <div className="flex space-x-2 ml-auto">
                        <button
                          onClick={() => handleShareLocation(index)}
                          className="p-2 text-blue-600 hover:bg-blue-50 rounded-full transition-colors"
                          title="Compartilhar localização"
                        >
                          <Share size={18} />
                        </button>
                        <button
                          onClick={() => handleEditGuardian(index)}
                          className="p-2 text-amber-600 hover:bg-amber-50 rounded-full transition-colors"
                          title="Editar"
                        >
                          <Edit size={18} />
                        </button>
                        <button
                          onClick={() => handleDeleteGuardian(index)}
                          className="p-2 text-red-600 hover:bg-red-50 rounded-full transition-colors"
                          title="Remover"
                        >
                          <Trash2 size={18} />
                        </button>
                      </div>
                    </div>
                  ))
                ) : (
                  <div className="p-8 text-center text-gray-500">
                    <User size={24} className="mx-auto mb-2 text-gray-400" />
                    <p>Nenhum responsável cadastrado</p>
                    <button 
                      onClick={() => setShowAddGuardian(true)}
                      className="mt-3 inline-flex items-center text-sm font-medium px-3 py-1 bg-blue-50 text-blue-600 hover:bg-blue-100 rounded-lg transition-colors"
                    >
                      <Plus size={16} className="mr-1" />
                      Adicionar Responsável
                    </button>
                  </div>
                )}
              </div>
            )}
          </div>
        )}
      </main>
    </div>
  );
};

export default StudentDashboard;